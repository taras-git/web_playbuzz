Automation Project (AppTest).


BASIC INFO.

This project (AppTest) is done using Java, Webdriver, Page Object pattern, Property (*.ini) files, and TestNg framework for running, generating and sending by email test run reports.



PROJECT STRUCTURE.

Pages(screens), used in the project:

Pages that describe browser windows:
- BasePage - it has common methods for webelement operations (click on element, send text, ...), and is parent for other page classes;
- MainPage - starting page for testcases;

Each page has its specific methods, used in testcases.

Pages that describe testcases:
- BaseTestCase - parent class for testcases. It initialize browser windows and driver;
- TestngTest - the testcase to check if TestNg works correctly
- TestCase1  - actual testcases.

All pages(except BasePage as it is not present in testcases) are instantiated in BaseTestCase class, which is parent class for testcase classes. Also in BaseTest case there are driver initializing and driver "quit" methods.

Testcase classes use instances of page classes and their appropriate methods for executing test steps. 

All values are provided in separate Property files, with the same name as testcase class name. 
To retrieve value from Property file there is Utils class with "getIniFileValue" method for easy values operating. 
The Property files are stored in resources/testcases/ folder.

In resources/config/ folder there is "testStation.ini" file that holds values for configuring the whole project (i.e. the number of seconds for iplicitly wait).


TESTSUITE

The testsuite is defined in testng.xml file, in project root.
It list the classes that have to be executed.
There is dependency between classes, so if "TestngTest" testcase fail (meaning there is a problem with correct work of TestNg framework), other testcases will be skipped.


RUNNING THE TESTCASES.

Unzip it to a preferable path, and navigate to this path in console (i.e.  ~/Project/AppTest$ ).
Run "mvn clean install" command (Maven has to be installed to run this command). Normally the project compiles and test run.

The usual test run console output:

Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 85.139 sec - in TestSuite
Results :
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0

After testcase run the Maven should display message "[INFO] BUILD SUCCESS" and send the report file by email. 


TEST REPORT.

Test report is generated by TestNg framework and is stored in /Project/AppTest/test-output/emailable-report.html file. 

Also there is configured postman plugin for Maven that send the report by email.
Receivers list is set in pom.xml file, in maven-postman-plugin section.
It is possible to add new receivers to existing list.

The report is sent from webappauto@yahoo.com account, which was created on purpose for this project.

